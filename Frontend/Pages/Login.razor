@page "/login"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager Navigation

<PageTitle>Care App</PageTitle>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-3">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>

    <div class="form-group mb-3">
        <label for="password">Password:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Log in</button>
    <button class="btn btn-primary" @onclick="HandleLogout">Logout</button>
</EditForm>


@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("/authenticate", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var authToken = await response.Content.ReadAsStringAsync();
            await localStorage.SetItemAsync("authToken", authToken);
            Navigation.NavigateTo("/careplans");
        }
        else
        {
            errorMessage = "Login failed. Please check your ID and password.";
        }
    }
    private async Task HandleLogout()
    {
        await localStorage.RemoveItemAsync("authToken");
        Navigation.NavigateTo("/");
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}